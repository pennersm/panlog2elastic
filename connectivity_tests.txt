# try to send (any) data from your local machine to the log receiving instance:
# e.g. :
# send data to logstash listening on 5519 UDP:
#   nc -u [EC2 public IP or DNS] 5519 <<EOF
#    some
#    garbage
#    data
#    EOF
#
# try to reach ELK instance from anywhere:
#  - you need the CA-cert to connect es01 service. A copy is placed during deployment in
#     ./docker/elk/setup_certs/current_ca.crt
#   mind that certificates change for every fresh install/deployment and cant be reused
#
# - some tools (browsers, curl, ...) require your CA cert be in the trust store
#   If this has not been set up for any reason then fix manually:
#     sudo cp ${HOSTLCAFILE} /usr/local/share/ca-certificates && sync
#     sudo update-ca-certificates
#   Where HOSTLCAFILE is the CA cert you fetch from any of the currently active elastic
#   containers
#
#------------------------------------------------------------------------------------------#
# CHECKING CONNECTIVITY FROM ANYWHERE TO ES INSTANCE:
[11:59:04][monitor@monvm][docker]# curl -v --cacert ./elk/setup_certs/current_ca.crt https://127.0.0.1:9200 -u elastic:2801mpeHAHAHA
*   Trying 127.0.0.1:9200...
* TCP_NODELAY set
* Connected to 127.0.0.1 (127.0.0.1) port 9200 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: ./elk/setup_certs/current_ca.crt
  CApath: /etc/ssl/certs
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
* TLSv1.3 (IN), TLS handshake, Server hello (2):
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
* TLSv1.3 (IN), TLS handshake, Request CERT (13):
* TLSv1.3 (IN), TLS handshake, Certificate (11):
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
* TLSv1.3 (IN), TLS handshake, Finished (20):
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
* TLSv1.3 (OUT), TLS handshake, Certificate (11):
* TLSv1.3 (OUT), TLS handshake, Finished (20):
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server did not agree to a protocol
* Server certificate:
*  subject: CN=es01
*  start date: May 21 06:05:04 2022 GMT
*  expire date: May 20 06:05:04 2025 GMT
*  subjectAltName: host "127.0.0.1" matched cert's IP address!
*  issuer: CN=Elastic Certificate Tool Autogenerated CA
*  SSL certificate verify ok.
* Server auth using Basic with user 'elastic'
> GET / HTTP/1.1
> Host: 127.0.0.1:9200
> Authorization: Basic ZWxhc3RpYzoyODAxbXBlSEFIQUhB
> User-Agent: curl/7.68.0
> Accept: */*
>
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< X-elastic-product: Elasticsearch
< content-type: application/json
< content-length: 531
<
{
  "name" : "es01",
  "cluster_name" : "pan-elastic-cl",
  "cluster_uuid" : "oikNUNM8TeiByZoWr-EM1g",
  "version" : {
    "number" : "8.1.3",
    "build_flavor" : "default",
    "build_type" : "docker",
    "build_hash" : "39afaa3c0fe7db4869a161985e240bd7182d7a07",
    "build_date" : "2022-04-19T08:13:25.444693396Z",
    "build_snapshot" : false,
    "lucene_version" : "9.0.0",
    "minimum_wire_compatibility_version" : "7.17.0",
    "minimum_index_compatibility_version" : "7.0.0"
  },
  "tagline" : "You Know, for Search"
}
* Connection #0 to host 127.0.0.1 left intact
[11:59:09][monitor@monvm][docker]#




#------------------------------------------------------------------------------------------#
# SEND API CALLS TO ES INSTANCE:

e.g.
curl -v --cacert ./elk/setup_certs/current_ca.crt https://127.0.0.1:9200/_nodes -u elastic:2801mpeHAHAHA |python -m json.tool
...
{
    "_nodes": {
        "failed": 0,
        "successful": 1,
        "total": 1
    },
    "cluster_name": "pan-elastic-cl",
    "nodes": {
        "Yd430lSSTd6QgkY6dbbUmQ": {
            "aggregations": {
                "adjacency_matrix": {
                    "types": [
                        "other"
                    ]
                },
                "auto_date_histogram": {
                    "types": [
                        "boolean",
...
snip
#------------------------------------------------------------------------------------------
# CHECKING CONNECTIVITY FROM ANYWHERE TO KIBANA:
[11:55:03][monitor@monvm][docker]# curl -v http://127.0.0.1:5601 -u elastic:2801mpeHAHAHA
*   Trying 127.0.0.1:5601...
* TCP_NODELAY set
* Connected to 127.0.0.1 (127.0.0.1) port 5601 (#0)
* Server auth using Basic with user 'elastic'
> GET / HTTP/1.1
> Host: 127.0.0.1:5601
> Authorization: Basic ZWxhc3RpYzoyODAxbXBlSEFIQUhB
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 302 Found
< location: /spaces/enter
< x-content-type-options: nosniff
< referrer-policy: no-referrer-when-downgrade
< kbn-name: kibana01
< kbn-license-sig: 76ca57e354542d02136cd9b5f2788a7a37e5cfab3107b99a0684c9246913c076
< cache-control: private, no-cache, no-store, must-revalidate
< content-length: 0
< Date: Mon, 23 May 2022 09:55:25 GMT
< Connection: keep-alive
< Keep-Alive: timeout=120
<
* Connection #0 to host 127.0.0.1 left intact
[11:55:25][monitor@monvm][docker]#
